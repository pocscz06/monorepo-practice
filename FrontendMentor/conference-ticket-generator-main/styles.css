/* Variable Definitions */
:root {
    --neutral0: hsl(0, 0%, 100%);
    --neutral300: hsl(252, 6%, 83%);
    --neutral500: hsl(245, 15%, 58%);
    --neutral700: hsl(245, 19%, 35%);
    --neutral900: hsl(248, 70%, 10%);
    --orange500: hsl(7, 88%, 67%); 
    --orange700: hsl(7, 71%, 60%);
    --textgradient-start: hsl(7, 86%, 67%);
    --textgradient-end: hsl(0, 0%, 100%);
    --inputbg: rgba(255, 255, 255, 7%)
}

/* Font Definition */
@font-face {
    font-family: "Inconsolata";
    src: url('./assets/fonts/Inconsolata-VariableFont_wdth\,wght.ttf') format('woff2-variations');
    font-style: normal;
    font-weight: 200 800;
}

*,
*::before,
*::after {
    box-sizing: border-box;
}

body {
    font-family: "Inconsolata", sans-serif;
    margin: 0;
    background-image: url('./assets/images/background-desktop.png');
    color: var(--neutral0);
    min-height: 100vh;
    position: relative;
    background-repeat: no-repeat;
    background-size: cover;
}

/* 
Gradient is applied via the background property, with a linear-gradient function
You specify what the gradient is applied on with the background-clip property
And you make the text color transparent to let the gradient show
 */
.gradient {
    background: linear-gradient(to bottom right, var(--textgradient-start), var(--textgradient-end));
    background-clip: text;
    color: transparent;
}

.hide {
    display: none !important;
}

/* Container for entire form including header */
.conf-form {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-top: 1rem;
    margin-bottom: 8rem;
}

.conf-form > * + * {
    margin-top: 1rem;
}

.conf-form label {
    font-size: 20px;
    display: block;
    margin-bottom: 10px;
}

/* 
I want the #event-name element to be centered within the page;
I can do so with display: block rather easily, but if I do that
--the body wouldn't treat its margin-top as part of the body's
"content." 

Two ways I know of to remedy this:

- text-align: center in body centers all inline and inline-block elements w/in main.
Images are inline-block by default. I don't particularly like this idea as I'd have to override
the text-alignment for other elements. In this case, it's just the labels--a pretty easy fix, but
the idea itself seems pretty messy to me. I could create an "override" text-align class, but I don't
think that's necessary. 

- Wrap the image within a container and apply a text-align of center to it.
*/
#event-name {
    margin-top: 2rem;
    /* 
    Easier way to "resize" an image without
    manipulating width & height 
    */
    transform: scale(0.7);
}

.event-name-container {
    text-align: center;
    user-select: none;
    pointer-events: none;
}

.bg-image {
    z-index: -1;
    user-select: none;
}

#pattern-lines {
    position: fixed;
    top: 0;
    width: 100%;
    opacity: 75%;
}

#squiggly-bottom {
    position: fixed;
    bottom: 0;
    left: 0;
}

#squiggly-top {
    position: fixed;
    top: 3rem;
    right: 0;
}

#circle {
    position: fixed;
    bottom: 12.5rem;
    right: 23rem;
}

.header {
    text-align: center;
    max-width: 35%;
}

.main-header {
    font-size: 36px;
}

.sub-header {
    color: var(--neutral300);
    font-size: 16px;
}


.drop-zone {
    border: 1px dashed var(--neutral500);
    background-color: var(--inputbg);
    border-radius: 10px;
}

.drop-zone > * {
    display: block;
    margin: auto;
    text-align: center;
    margin-top: 1rem;
}

.drop-zone > :first-child {
    border: 1px solid var(--neutral500);
    background-color: var(--neutral700);
    border-radius: 8px;
    padding: 5px;
}

.drop-zone > :nth-child(2) {
    margin-bottom: 1rem;
    color: var(--neutral300);
}

.drop-zone:hover {
    background-color: var(--neutral700);
    cursor: pointer;
}

.hidden-btns {
    margin-bottom: 1rem;
}

.hidden-btns > * {
    background-color: rgba(255, 255, 255, 12%);
    border: none;
    color: var(--neutral300);
    padding: 7px;
    border-radius: 5px;
}

.hidden-btns > *:hover {
    cursor: pointer;
    background-color: var(--neutral500);
}

.info-text {
    display: flex;
    gap: 10px;
    color: var(--neutral500);
}

.info-text p {
    font-size: 10px;
}

.conf-form > section {
    min-width: 25%;
    user-select: none;
}

.input {
    width: 100%;
    min-height: 2.5rem;
    padding: 1em;
    background-color: var(--inputbg);
    border: 1px solid var(--neutral500);
    color: var(--neutral0);
}

.input:hover {
    background-color: var(--neutral700);
    cursor: pointer;
}

.btn {
    min-width: 25%;
    min-height: 2.5rem;
    background-color: var(--orange500);
    font-family: "Inconsolata", sans-serif;
    font-weight: 800;
    transition: all ease-in-out 300ms;
    font-size: 16px;
}

.btn:hover {
    background-color: var(--orange700);
    transform: translateY(-1px);
    cursor: pointer;
}


.brd-rad {
    border-radius: 10px;
}

.attribution {
    position: fixed;
    bottom: 0;
    width: 100%;
    margin: auto;
}